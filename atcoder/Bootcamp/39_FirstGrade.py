"""
1年生:
ググって調べたコードを見ると短くて余裕そうだが、
何も見ず自分でDP表を書くのはなかなか簡単ではなかった。

・方針
→ 全てを0で初期化した後、前方を参照してインクリメントしていく(+1とかではない)
→ 下のDP表がきちんと書ければいける。

11
8 3 2 4 8 7 2 4 0 8 8
---
10
dp[n][m]=: n個の数字を使って、部分和mを作ることができる「組み合わせの数」

  -> Sum
i     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
  0 m 1 0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 
  1 8 0 0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  2 3 0 0 0 0 0 1 0 0 0 0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  3 2 0 0 0 1 0 0 0 1 0 1  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0
  4 4 0 0 0 1 0 1 0 1 0 1  0  1  0  1  0  0  0  1  0  0  0  0  1  0  0  0
  5 8 0 1 0 1 0 1 0 0 0 1  0  1  0  1  0  1  0  1  0  1  0  1  1  0  1  1 
  6 7 0 0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  7 2 0 ..
  8 4 0
  9 0 0
 10 8 0
"""

n = int(input())
l = [0]+list(map(int,input().split()))

M = 30
dp = [[0]*30 for _ in range(n+1)]

dp[0][0] = 1
for i in range(1,n+1):
    for m in range(M):
        if m-l[i]>=0:
            dp[i][m]+=dp[i-1][m-l[i]]
        if m+l[i]<M:
            dp[i][m]+=dp[i-1][m+l[i]]

for i in range(n+1): 
    print(*dp[i])
